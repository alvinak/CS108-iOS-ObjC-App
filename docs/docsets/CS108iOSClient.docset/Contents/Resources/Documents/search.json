{"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveTagResponsePacket:tagReceived:":{"name":"-didReceiveTagResponsePacket:tagReceived:","abstract":"<p>This will be triggered when reader receives a new tag response during its operations</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didTriggerKeyChangedState:keyState:":{"name":"-didTriggerKeyChangedState:keyState:","abstract":"<p>This will be triggered when the trigger key on the reader has chagned state (pressed/released)</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveBatteryLevelIndicator:batteryPercentage:":{"name":"-didReceiveBatteryLevelIndicator:batteryPercentage:","abstract":"<p>This will be triggered when reader receives battery level notification on every 5 seconds</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveBarcodeData:scannedBarcode:":{"name":"-didReceiveBarcodeData:scannedBarcode:","abstract":"<p>This will be triggered when a barcode is being scanned</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleReaderDelegate.html#/c:objc(pl)CSLBleReaderDelegate(im)didReceiveTagAccessData:tagReceived:":{"name":"-didReceiveTagAccessData:tagReceived:","abstract":"<p>This will be triggered when reader receives a tag access response during its operations</p>","parent_name":"CSLBleReaderDelegate"},"Protocols/CSLBleInterfaceDelegate.html#/c:objc(pl)CSLBleInterfaceDelegate(im)didInterfaceChangeConnectStatus:":{"name":"-didInterfaceChangeConnectStatus:","abstract":"<p>This will be triggered when the status of the reader changes</p>","parent_name":"CSLBleInterfaceDelegate"},"Protocols/CSLBleInterfaceDelegate.html":{"name":"CSLBleInterfaceDelegate","abstract":"<p>Delegate of the Bluetooth LE interface events</p>"},"Protocols/CSLBleReaderDelegate.html":{"name":"CSLBleReaderDelegate","abstract":"<p>Delegate of the reader events</p>"},"Enums/BATTERYLEVELSTATUS.html#/c:@E@BATTERYLEVELSTATUS@NORMAL":{"name":"NORMAL","abstract":"<p>Battery level in good health</p>","parent_name":"BATTERYLEVELSTATUS"},"Enums/BATTERYLEVELSTATUS.html#/c:@E@BATTERYLEVELSTATUS@LOW":{"name":"LOW","abstract":"<p>Battery low indicator</p>","parent_name":"BATTERYLEVELSTATUS"},"Enums/BATTERYLEVELSTATUS.html#/c:@E@BATTERYLEVELSTATUS@LOW_17":{"name":"LOW_17","abstract":"<p>Battery level below 17%</p>","parent_name":"BATTERYLEVELSTATUS"},"Enums/BATTERYMODE.html#/c:@E@BATTERYMODE@INVENTORY":{"name":"INVENTORY","abstract":"<p>Select battery level curve for inventory mode</p>","parent_name":"BATTERYMODE"},"Enums/BATTERYMODE.html#/c:@E@BATTERYMODE@IDLE":{"name":"IDLE","abstract":"<p>Select battery level curve for idle mode</p>","parent_name":"BATTERYMODE"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@READ":{"name":"READ","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@WRITE":{"name":"WRITE","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@KILL":{"name":"KILL","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@LOCK":{"name":"LOCK","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/ACCESSCMD.html#/c:@E@ACCESSCMD@EAS":{"name":"EAS","abstract":"<p>Undocumented</p>","parent_name":"ACCESSCMD"},"Enums/QUERYSELECT.html#/c:@E@QUERYSELECT@ALL":{"name":"ALL","abstract":"<p>Undocumented</p>","parent_name":"QUERYSELECT"},"Enums/QUERYSELECT.html#/c:@E@QUERYSELECT@SL":{"name":"SL","abstract":"<p>Undocumented</p>","parent_name":"QUERYSELECT"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@MULTIPATH_INTERFERENCE_RESISTANCE":{"name":"MULTIPATH_INTERFERENCE_RESISTANCE","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@RANGE_DRM":{"name":"RANGE_DRM","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@RANGE_THROUGHPUT_DRM":{"name":"RANGE_THROUGHPUT_DRM","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/LINKPROFILE.html#/c:@E@LINKPROFILE@MAX_THROUGHPUT":{"name":"MAX_THROUGHPUT","abstract":"<p>Undocumented</p>","parent_name":"LINKPROFILE"},"Enums/QUERYALGORITHM.html#/c:@E@QUERYALGORITHM@FIXEDQ":{"name":"FIXEDQ","abstract":"<p>Undocumented</p>","parent_name":"QUERYALGORITHM"},"Enums/QUERYALGORITHM.html#/c:@E@QUERYALGORITHM@DYNAMICQ":{"name":"DYNAMICQ","abstract":"<p>Undocumented</p>","parent_name":"QUERYALGORITHM"},"Enums/TARGET.html#/c:@E@TARGET@A":{"name":"A","abstract":"<p>Undocumented</p>","parent_name":"TARGET"},"Enums/TARGET.html#/c:@E@TARGET@B":{"name":"B","abstract":"<p>Undocumented</p>","parent_name":"TARGET"},"Enums/TARGET.html#/c:@E@TARGET@ToggleAB":{"name":"ToggleAB","abstract":"<p>Undocumented</p>","parent_name":"TARGET"},"Enums/SESSION.html#/c:@E@SESSION@S0":{"name":"S0","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/SESSION.html#/c:@E@SESSION@S1":{"name":"S1","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/SESSION.html#/c:@E@SESSION@S2":{"name":"S2","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/SESSION.html#/c:@E@SESSION@S3":{"name":"S3","abstract":"<p>Undocumented</p>","parent_name":"SESSION"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@RESERVED":{"name":"RESERVED","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@EPC":{"name":"EPC","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@TID":{"name":"TID","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/MEMORYBANK.html#/c:@E@MEMORYBANK@USER":{"name":"USER","abstract":"<p>Undocumented</p>","parent_name":"MEMORYBANK"},"Enums/DIRECTION.html#/c:@E@DIRECTION@Downlink":{"name":"Downlink","abstract":"<p>Undocumented</p>","parent_name":"DIRECTION"},"Enums/DIRECTION.html#/c:@E@DIRECTION@Uplink":{"name":"Uplink","abstract":"<p>Undocumented</p>","parent_name":"DIRECTION"},"Enums/CONNECTION.html#/c:@E@CONNECTION@USB":{"name":"USB","abstract":"<p>Undocumented</p>","parent_name":"CONNECTION"},"Enums/CONNECTION.html#/c:@E@CONNECTION@Bluetooth":{"name":"Bluetooth","abstract":"<p>Undocumented</p>","parent_name":"CONNECTION"},"Enums/DEVICEID.html#/c:@E@DEVICEID@RFID":{"name":"RFID","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@Barcode":{"name":"Barcode","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@Notification":{"name":"Notification","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@SiliconLabIC":{"name":"SiliconLabIC","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/DEVICEID.html#/c:@E@DEVICEID@BluetoothIC":{"name":"BluetoothIC","abstract":"<p>Undocumented</p>","parent_name":"DEVICEID"},"Enums/STATUS.html#/c:@E@STATUS@CONNECTED":{"name":"CONNECTED","abstract":"<p>When reader is connected but in idle mode</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@NOT_CONNECTED":{"name":"NOT_CONNECTED","abstract":"<p>When reader is not connected</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@SCANNING":{"name":"SCANNING","abstract":"<p>Application is under device search mode</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@BUSY":{"name":"BUSY","abstract":"<p>Reader is busy and not able to receive any downlink command</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@TAG_OPERATIONS":{"name":"TAG_OPERATIONS","abstract":"<p>Reader is performing actions on the tags (inventory/read/write/etc) in the background but still able to receive specific downlink commands</p>","parent_name":"STATUS"},"Enums/STATUS.html#/c:@E@STATUS@ERROR":{"name":"ERROR","abstract":"<p>Indicates an internal error</p>","parent_name":"STATUS"},"Enums/STATUS.html":{"name":"STATUS","abstract":"<p>Reader status representations</p>"},"Enums/DEVICEID.html":{"name":"DEVICEID","abstract":"<p>Device ID</p>"},"Enums/CONNECTION.html":{"name":"CONNECTION","abstract":"<p>Connection type (USB/Bluetooth)</p>"},"Enums/DIRECTION.html":{"name":"DIRECTION","abstract":"<p>Direction of data transfer</p>"},"Enums/MEMORYBANK.html":{"name":"MEMORYBANK","abstract":"<p>Query sessions</p>"},"Enums/SESSION.html":{"name":"SESSION","abstract":"<p>Query sessions</p>"},"Enums/TARGET.html":{"name":"TARGET","abstract":"<p>Query target</p>"},"Enums/QUERYALGORITHM.html":{"name":"QUERYALGORITHM","abstract":"<p>Query algorithm</p>"},"Enums/LINKPROFILE.html":{"name":"LINKPROFILE","abstract":"<p>Link profile</p>"},"Enums/QUERYSELECT.html":{"name":"QUERYSELECT","abstract":"<p>Undocumented</p>"},"Enums/ACCESSCMD.html":{"name":"ACCESSCMD","abstract":"<p>Tag Access Command</p>"},"Enums/BATTERYMODE.html":{"name":"BATTERYMODE","abstract":"<p>Select the battery level curve based on the reader status</p>"},"Enums/BATTERYLEVELSTATUS.html":{"name":"BATTERYLEVELSTATUS","abstract":"<p>Define the battery level status</p>"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)reader":{"name":"reader","abstract":"<p>CSLBleReader instance of the connected reader</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)settings":{"name":"settings","abstract":"<p>Reader settings being stored in User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)readerInfo":{"name":"readerInfo","abstract":"<p>Technical details of the connected reader</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)tagSelected":{"name":"tagSelected","abstract":"<p>Tag selected for tag read/write/search</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(py)isBarcodeMode":{"name":"isBarcodeMode","abstract":"<p>Defines the current reader mode (RFID/Barcode)</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(cm)sharedAppEngine":{"name":"+sharedAppEngine","abstract":"<p>Initialize the app engine</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(cm)alloc":{"name":"+alloc","abstract":"<p>Memory allocation of the singleton class</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(cm)destroy":{"name":"+destroy","abstract":"<p>Release the singleton class</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)init":{"name":"-init","abstract":"<p>Initializing instances for: (1) CSLBleReader (2) CSLReaderSettings (3) CSLReaderInfo</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)dealloc":{"name":"-dealloc","abstract":"<p>dealloc (not in use)</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)reloadSettingsFromUserDefaults":{"name":"-reloadSettingsFromUserDefaults","abstract":"<p>Load settings from User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)saveSettingsToUserDefaults":{"name":"-saveSettingsToUserDefaults","abstract":"<p>Save current settings to User Defaults</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLRfidAppEngine.html#/c:objc(cs)CSLRfidAppEngine(im)soundAlert:":{"name":"-soundAlert:","abstract":"<p>Play iOS default sound alerts</p>","parent_name":"CSLRfidAppEngine"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)power":{"name":"power","abstract":"<p>Reader output power</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)tagPopulation":{"name":"tagPopulation","abstract":"<p>Estimated tag population in the reading environment</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)isQOverride":{"name":"isQOverride","abstract":"<p>Enable/disable Q overriding, where Q should be defined manually or calcuated based on the estimated tag population</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)QValue":{"name":"QValue","abstract":"<p>User defined, or calculated Q value</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)session":{"name":"session","abstract":"<p>Query session</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)target":{"name":"target","abstract":"<p>Query target</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)algorithm":{"name":"algorithm","abstract":"<p>Query algorithm</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)linkProfile":{"name":"linkProfile","abstract":"<p>Link profile selected</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderSettings.html#/c:objc(cs)CSLReaderSettings(py)enableSound":{"name":"enableSound","abstract":"<p>Define whether sound alert is enabled/disabled</p>","parent_name":"CSLReaderSettings"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)appVersion":{"name":"appVersion","abstract":"<p>Applicatino version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)BtFirmwareVersion":{"name":"BtFirmwareVersion","abstract":"<p>Bluetooth IC firmware version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)RfidFirmwareVersion":{"name":"RfidFirmwareVersion","abstract":"<p>RFID firmware version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)SiLabICFirmwareVersion":{"name":"SiLabICFirmwareVersion","abstract":"<p>Silicon Lab IC firmware version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)deviceSerialNumber":{"name":"deviceSerialNumber","abstract":"<p>Reader 13-character serial number</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)pcbBoardVersion":{"name":"pcbBoardVersion","abstract":"<p>PCB board version</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderInfo.html#/c:objc(cs)CSLReaderInfo(py)batteryPercentage":{"name":"batteryPercentage","abstract":"<p>Reader current battery level percentage</p>","parent_name":"CSLReaderInfo"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)initWithPcBVersion:":{"name":"-initWithPcBVersion:","abstract":"<p>As battery level curve selected is depended on PCB version, initialize the instance with current PCB version</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)setPcbVersion:":{"name":"-setPcbVersion:","abstract":"<p>Report the PCB version of the connected reader</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)setBatteryMode:":{"name":"-setBatteryMode:","abstract":"<p>Set battery mode (idle/inventory)</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBattery.html#/c:objc(cs)CSLReaderBattery(im)getBatteryPercentageByVoltage:":{"name":"-getBatteryPercentageByVoltage:","abstract":"<p>Get the battery level in percentage by voltage</p>","parent_name":"CSLReaderBattery"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)serialData":{"name":"serialData","abstract":"<p>Serial data returned by the barcode module</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)barcodeValue":{"name":"barcodeValue","abstract":"<p>Barcode value extract from serial data</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)codeId":{"name":"codeId","abstract":"<p>Code ID representing the barcode type</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(py)aimId":{"name":"aimId","abstract":"<p>AIM ID</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(im)initWithSerialData:":{"name":"-initWithSerialData:","abstract":"<p>Initialize the instance with serial data returned from the barcode reader</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(im)extractBarcodeFromSerialData":{"name":"-extractBarcodeFromSerialData","abstract":"<p>Extract barcode information from serial data returned by the barcode module</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(cm)convertDataToHexString:":{"name":"+convertDataToHexString:","abstract":"<p>Convert serial data to hexdecimal string</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLReaderBarcode.html#/c:objc(cs)CSLReaderBarcode(cm)convertHexStringToAscii:":{"name":"+convertHexStringToAscii:","abstract":"<p>Convert hexdecimal string to ASCII string</p>","parent_name":"CSLReaderBarcode"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(py)capacity":{"name":"capacity","abstract":"<p>Define the maximum number of elements that the instance can hold</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(py)count":{"name":"count","abstract":"<p>Number of element that the instance is holding</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)initWithCapacity:":{"name":"-initWithCapacity:","abstract":"<p>Initializing the instance with a defined capacity</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)enqObject:":{"name":"-enqObject:","abstract":"<p>Enqueu object into the queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)deqObject":{"name":"-deqObject","abstract":"<p>Dnqueu object from the queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)objectAtIndex:":{"name":"-objectAtIndex:","abstract":"<p>Return reference to a specific object in the queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)removeAllObjects":{"name":"-removeAllObjects","abstract":"<p>Remove all objects in queue</p>","parent_name":"CSLCircularQueue"},"Classes/CSLCircularQueue.html#/c:objc(cs)CSLCircularQueue(im)calculateRollingAverage":{"name":"-calculateRollingAverage","abstract":"<p>Calculate the rolling average of the tag search RSSI</p>","parent_name":"CSLCircularQueue"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)PC":{"name":"PC","abstract":"<p>Protocol Control bits</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)EPC":{"name":"EPC","abstract":"<p>EPC data string</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA1":{"name":"DATA1","abstract":"<p>DATA1 string</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA1Length":{"name":"DATA1Length","abstract":"<p>DATA1 length</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA2":{"name":"DATA2","abstract":"<p>DATA2 string</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)DATA2Length":{"name":"DATA2Length","abstract":"<p>DATA2 length</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)rssi":{"name":"rssi","abstract":"<p>Return RRSI of the tag response</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)timestamp":{"name":"timestamp","abstract":"<p>Return timestamp of the tag readtime</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)CRCError":{"name":"CRCError","abstract":"<p>CRC error flag</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)AccessCommand":{"name":"AccessCommand","abstract":"<p>command of the tag access operation</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)BackScatterError":{"name":"BackScatterError","abstract":"<p>Backscatter error flag with 0=no error, otherwise it represents the error code</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)ACKTimeout":{"name":"ACKTimeout","abstract":"<p>ACK timeout flag</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)portNumber":{"name":"portNumber","abstract":"<p>Antenna port tag being returned</p>","parent_name":"CSLBleTag"},"Classes/CSLBleTag.html#/c:objc(cs)CSLBleTag(py)AccessError":{"name":"AccessError","abstract":"<p>Access Operation error flag with 0=no error, otherwise it represents the error code</p>","parent_name":"CSLBleTag"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)filteredBuffer":{"name":"filteredBuffer","abstract":"<p>This is a buffer for all the tags that have been sorted with all duplicates removed.","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)rangingTagCount":{"name":"rangingTagCount","abstract":"<p>This property holds the number of tags being read.  It is reset within a specific time interval (1 second by default)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)uniqueTagCount":{"name":"uniqueTagCount","abstract":"<p>This property holds the number of unique tags being read.  It is reset within a specific time interval (1 second by default)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)batteryInfo":{"name":"batteryInfo","abstract":"<p>Enumeration type that holds the battery status information.  Its value is is being updated by a scheduled timer when batteery level notifications return on every 5 seconds</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)cmdRespQueue":{"name":"cmdRespQueue","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(py)readerDelegate":{"name":"readerDelegate","abstract":"<p>Delegate instance that follows the CSLBleReaderDelegate protocol</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(cm)convertHexStringToData:":{"name":"+convertHexStringToData:","abstract":"<p>Static method that converts hexdcecimal string to binary data</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(cm)convertDataToHexString:":{"name":"+convertDataToHexString:","abstract":"<p>Static method that converts binary data to hexdcecimal string</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)init":{"name":"-init","abstract":"<p>initialization selector that:</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)dealloc":{"name":"-dealloc","abstract":"<p>dealloc selector that:</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)readOEMData:atAddr:forData:":{"name":"-readOEMData:atAddr:forData:","abstract":"<p>Read OEM data that contains product-specific information such as country code, antenna version and frequency channel information</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)barcodeReader:":{"name":"-barcodeReader:","abstract":"<p>Enable/disable barcode reader</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startBarcodeReading":{"name":"-startBarcodeReading","abstract":"<p>Start barcode reading continuously</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopBarcodeReading":{"name":"-stopBarcodeReading","abstract":"<p>Stop barcode reading</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendBarcodeCommandData:":{"name":"-sendBarcodeCommandData:","abstract":"<p>Send serial command to barcode reader module</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)powerOnRfid:":{"name":"-powerOnRfid:","abstract":"<p>Power on/off RFID module</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getBtFirmwareVersion:":{"name":"-getBtFirmwareVersion:","abstract":"<p>Obtain Bluetooth firmware version</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getConnectedDeviceName:":{"name":"-getConnectedDeviceName:","abstract":"<p>Obtain device name (name showing up during device discovery)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getSilLabIcVersion:":{"name":"-getSilLabIcVersion:","abstract":"<p>Obtain Silicon Lab IC firmware version</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getRfidBrdSerialNumber:":{"name":"-getRfidBrdSerialNumber:","abstract":"<p>Obtain RFID board serial number</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getPcBBoardVersion:":{"name":"-getPcBBoardVersion:","abstract":"<p>Obtain PCB board version information</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendAbortCommand":{"name":"-sendAbortCommand","abstract":"<p>Send abort command to the device for stopping RFID operations (e.g. inventory, tag read/write, etc.)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startBatteryAutoReporting":{"name":"-startBatteryAutoReporting","abstract":"<p>Start battery level reporting (notification every 5 seconds)","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopBatteryAutoReporting":{"name":"-stopBatteryAutoReporting","abstract":"<p>Stop battery level reporting (notification every 5 seconds)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)getRfidFwVersionNumber:":{"name":"-getRfidFwVersionNumber:","abstract":"<p>Obtain RFID module firmware version</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setPower:":{"name":"-setPower:","abstract":"<p>Set output power of the reader</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setAntennaCycle:":{"name":"-setAntennaCycle:","abstract":"<p>Set antenna cycle</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setAntennaDwell:":{"name":"-setAntennaDwell:","abstract":"<p>Set antenna dwell time</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setLinkProfile:":{"name":"-setLinkProfile:","abstract":"<p>Set link profile from the four selections</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)selectAlgorithmParameter:":{"name":"-selectAlgorithmParameter:","abstract":"<p>Select which set of algorithm parameter registers to access.</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryAlgorithmParameters0:maximumQ:minimumQ:ThresholdMultiplier:":{"name":"-setInventoryAlgorithmParameters0:maximumQ:minimumQ:ThresholdMultiplier:","abstract":"<p>The algorithm that will be used for the next Inventory command. The definition of each register varies depending on the algorithm chosen. For instance, if you wish to set the","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryAlgorithmParameters1:":{"name":"-setInventoryAlgorithmParameters1:","abstract":"<p>The algorithm that will be used for the next Inventory command. The definition of each register varies depending on the algorithm chosen. For instance, if you wish to set the","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryAlgorithmParameters2:RunTillZero:":{"name":"-setInventoryAlgorithmParameters2:RunTillZero:","abstract":"<p>The algorithm that will be used for the next Inventory command. The definition of each register varies depending on the algorithm chosen. For instance, if you wish to set the","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setInventoryConfigurations:MatchRepeats:tagSelect:disableInventory:tagRead:crcErrorRead:QTMode:tagDelay:inventoryMode:":{"name":"-setInventoryConfigurations:MatchRepeats:tagSelect:disableInventory:tagRead:crcErrorRead:QTMode:tagDelay:inventoryMode:","abstract":"<p>Inventory configuration. Configure parameters used in underlying inventory operations</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setQueryConfigurations:querySession:querySelect:":{"name":"-setQueryConfigurations:querySession:querySelect:","abstract":"<p>Configure parameters used in underlying Query and inventory operations.</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startInventory":{"name":"-startInventory","abstract":"<p>Start Inventory asynchornously</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopInventory":{"name":"-stopInventory","abstract":"<p>Stop Inventory</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)decodePacketsInBufferAsync":{"name":"-decodePacketsInBufferAsync","abstract":"<p>Start the data packet decoding routine, where a selector will be running on a background thread and decode the received packet if commands were being sent out previously.  Results will be returned to the recvQueue (for asynchornous commands)  and to cmdRespQueue (for synchronous commands)</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setParametersForTagAccess":{"name":"-setParametersForTagAccess","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_DESC_CFG:selectTarget:selectAction:":{"name":"-TAGMSK_DESC_CFG:selectTarget:selectAction:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_BANK:":{"name":"-TAGMSK_BANK:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_PTR:":{"name":"-TAGMSK_PTR:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGMSK_LEN:":{"name":"-TAGMSK_LEN:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setTAGMSK:tagMask:":{"name":"-setTAGMSK:tagMask:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_BANK:acc_bank2:":{"name":"-TAGACC_BANK:acc_bank2:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_PTR:":{"name":"-TAGACC_PTR:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_PTR:secondBank:":{"name":"-TAGACC_PTR:secondBank:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_CNT:secondBank:":{"name":"-TAGACC_CNT:secondBank:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_ACCPWD:":{"name":"-TAGACC_ACCPWD:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)setTAGWRDAT:data_word:data_offset:":{"name":"-setTAGWRDAT:data_word:data_offset:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_DESC_CFG:retryCount:":{"name":"-TAGACC_DESC_CFG:retryCount:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)TAGACC_LOCKCFG:":{"name":"-TAGACC_LOCKCFG:","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandRead":{"name":"-sendHostCommandRead","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandWrite":{"name":"-sendHostCommandWrite","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandSearch":{"name":"-sendHostCommandSearch","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)sendHostCommandLock":{"name":"-sendHostCommandLock","abstract":"<p>Undocumented</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)selectTag:maskPointer:maskLength:maskData:":{"name":"-selectTag:maskPointer:maskLength:maskData:","abstract":"<p>Select tag before tag access (read/write) operation</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)selectTagForSearch:maskPointer:maskLength:maskData:":{"name":"-selectTagForSearch:maskPointer:maskLength:maskData:","abstract":"<p>Select tag before tag access (search) operation</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagMemoryRead:dataOffset:dataCount:ACCPWD:maskBank:maskPointer:maskLength:maskData:":{"name":"-startTagMemoryRead:dataOffset:dataCount:ACCPWD:maskBank:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag read command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagMemoryWrite:dataOffset:dataCount:writeData:ACCPWD:maskBank:maskPointer:maskLength:maskData:":{"name":"-startTagMemoryWrite:dataOffset:dataCount:writeData:ACCPWD:maskBank:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag write command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagMemoryLock:ACCPWD:maskBank:maskPointer:maskLength:maskData:":{"name":"-startTagMemoryLock:ACCPWD:maskBank:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag security command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)startTagSearch:maskPointer:maskLength:maskData:":{"name":"-startTagSearch:maskPointer:maskLength:maskData:","abstract":"<p>Send singular tag search command</p>","parent_name":"CSLBleReader"},"Classes/CSLBleReader.html#/c:objc(cs)CSLBleReader(im)stopTagSearch":{"name":"-stopTagSearch","abstract":"<p>Stop singular tag search</p>","parent_name":"CSLBleReader"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)prefix":{"name":"prefix","abstract":"<p>prefix (0xA0)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)connection":{"name":"connection","abstract":"<p>Connection type (USB/Bluetooth)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)payloadLength":{"name":"payloadLength","abstract":"<p>Payload length 1 to 120</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)deviceId":{"name":"deviceId","abstract":"<p>Destination/Source (RFID/Barcode/Notification/Silicon Lab IC/Bluetooth IC)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)Reserve":{"name":"Reserve","abstract":"<p>Reserved byte. 0x82 in most cases, or the sequence number of data stream</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)direction":{"name":"direction","abstract":"<p>Direction (downlink/uplink)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)crc1":{"name":"crc1","abstract":"<p>CRC of data packet (byte 1)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)crc2":{"name":"crc2","abstract":"<p>CRC of data packet (byte 2)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(py)payload":{"name":"payload","abstract":"<p>payload of data packet (first two bytes would be event code)</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(im)getPacketInHexString":{"name":"-getPacketInHexString","abstract":"<p>Return serialized packet data in hexdecimal string</p>","parent_name":"CSLBlePacket"},"Classes/CSLBlePacket.html#/c:objc(cs)CSLBlePacket(im)getPacketPayloadInHexString":{"name":"-getPacketPayloadInHexString","abstract":"<p>Return serialized packet payload in hexdecimal string</p>","parent_name":"CSLBlePacket"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface@connectStatus":{"name":"connectStatus","abstract":"<p>Reader connection status</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)deviceName":{"name":"deviceName","abstract":"<p>Once reader is connect, the device name obtained during the discovery process will be stored in this property.</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)LastException":{"name":"LastException","abstract":"<p>Last exception being returned, if any.</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)bleDeviceList":{"name":"bleDeviceList","abstract":"<p>Array of CBPeripheral object after device discovery</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)bleDevice":{"name":"bleDevice","abstract":"<p>Connected BLE device</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)recvQueue":{"name":"recvQueue","abstract":"<p>Queue for the data packets returned</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)connectStatus":{"name":"connectStatus","abstract":"<p>Property for the connection status that is read-only</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(py)delegate":{"name":"delegate","abstract":"<p>instance of the CSLBleInterfaceDelegate delegate</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)init":{"name":"-init","abstract":"<p>initialization selector that:</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)dealloc":{"name":"-dealloc","abstract":"<p>dealloc selector that release selector to the delegates</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)startScanDevice":{"name":"-startScanDevice","abstract":"<p>Start scanning for readers in the environment</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)stopScanDevice":{"name":"-stopScanDevice","abstract":"<p>Stop scanning for readers in the environment</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)connectDevice:":{"name":"-connectDevice:","abstract":"<p>Connect to device</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)disconnectDevice":{"name":"-disconnectDevice","abstract":"<p>Disconnect device</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)isLECapableHardware":{"name":"-isLECapableHardware","abstract":"<p>Check if device returned is a Bluetooth LE compatiable hardware</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)sendPackets:":{"name":"-sendPackets:","abstract":"<p>Send downlink data packet to reader</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html#/c:objc(cs)CSLBleInterface(im)computeChecksum:":{"name":"-computeChecksum:","abstract":"<p>Calculate checksum of the data</p>","parent_name":"CSLBleInterface"},"Classes/CSLBleInterface.html":{"name":"CSLBleInterface","abstract":"<p>Low-level Bluetooth LE communication using Apple Core Bluetooth framework</p>"},"Classes/CSLBlePacket.html":{"name":"CSLBlePacket","abstract":"<p>Data information of a Bluetooth LE packet</p>"},"Classes/CSLBleReader.html":{"name":"CSLBleReader","abstract":"<p>This object class holds the core function of the reader API and it allows developers to configure and control the device being connnected."},"Classes/CSLBleTag.html":{"name":"CSLBleTag","abstract":"<p>Tag data information</p>"},"Classes/CSLCircularQueue.html":{"name":"CSLCircularQueue","abstract":"<p>Circular queue for storing tag response data</p>"},"Classes/CSLReaderBarcode.html":{"name":"CSLReaderBarcode","abstract":"<p>Barcode reader operations and data management</p>"},"Classes/CSLReaderBattery.html":{"name":"CSLReaderBattery","abstract":"<p>Reader battery level monitoring</p>"},"Classes/CSLReaderInfo.html":{"name":"CSLReaderInfo","abstract":"<p>Information of the connected reader</p>"},"Classes/CSLReaderSettings.html":{"name":"CSLReaderSettings","abstract":"<p>Reader Settings</p>"},"Classes/CSLRfidAppEngine.html":{"name":"CSLRfidAppEngine","abstract":"<p>Singleton class that handles all activities on the reader.  It provides a centralize point and allows data to be moved across different controllers</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}